module.exports = () => `В ES6 мы можем инициализировать параметры значением по умолчанию. Значением параметра будет значение по умолчанию, если никакое другое значение не было передано функции, или если значение параметра равно <code>"undefined"</code>. В этом случае мы распространяем свойства объекта <code>value</code> на новый объект, поэтому значение <code>x</code> по умолчанию равно <code>{number: 10}</code>.

Аргумент по умолчанию реализуется в момент <i>call time</i>! Каждый раз, когда мы вызываем функцию, создается <i>new</i> объект. Мы вызываем функцию <code>multiply</code> первые два раза, не передавая значение: <code>x</code> имеет значение по умолчанию <code>{number: 10}</code>. Затем мы записываем умноженное значение этого числа, которое равно <code>20</code>.

В третий раз, когда мы вызываем multiply, мы передаем аргумент: объект с именем <code>value</code>. Оператор <code>*=</code> на самом деле является сокращением для <code>x.number = x.number * 2</code>: мы изменяем значение <code>x.number</code> и записываем умноженное значение <code>20</code>.

В четвертый раз мы снова передаем объект <code>value</code>. <code>x.number</code> ранее был изменен на <code>20</code>, поэтому <code>x.number * = 2</code> записывает <code>40</code>.
`;