module.exports = () => `Функция <code>add</code> является функцией <i>запоминателем</i>. С помощью запоминания мы можем кэшировать результаты функции, чтобы ускорить ее выполнение. В этом случае мы создаем объект <code>cache</code>, в котором хранятся ранее возвращенные значения.

Если мы снова вызываем функцию <code>addFunction</code> с тем же аргументом, она сначала проверяет, получило ли оно уже это значение в своем кеше. В этом случае будет возвращено значение кэша, что экономит время выполнения. Иначе, если он не кэшируется, он вычислит значение и сохранит его после.

Мы вызываем функцию <code>addFunction</code> три раза с одним и тем же значением: при первом вызове значение функции, когда <code>num</code> равно <code>10</code>, еще не кэшировано. Условие оператора if <code>num in cache</code> возвращает <code>false</code>, и выполняется блок else: <code>Calculated! 20</code> регистрируется, и значение результата добавляется в объект кеша. <code>cache</code> теперь выглядит как <code>{10: 20}</code>.

Во второй раз объект <code>cache</code> содержит значение, возвращаемое для <code>10</code>. Условие оператора if <code>num in cache</code> возвращает <code>true</code>, а <code>'From cache! 20'</code> выводится в лог.

В третий раз мы передаем <code>5 * 2</code> в функцию, которая оценивается как <code>10</code>. Объект <code>cache</code> содержит значение, возвращаемое для <code>10</code>. Условие оператора if <code>num in cache</code> возвращает <code>true</code>, а <code>'From cache! 20'</code> регистрируется.
`;