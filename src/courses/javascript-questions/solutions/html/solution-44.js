module.exports = () => `Обычные функции не могут быть остановлены на полпути после вызова. Однако функцию генератор можно "остановить" на полпути, а затем продолжить с того места, где она остановилась. Каждый раз, когда в функции-генераторе встречает ключевое слово <code>yield</code>, функция возвращает значение, указанное после него. Обратите внимание, что функция генератора в этом случае не <i>return</i> значение, оно <i>yields</i> значение.

Сначала мы инициализируем функцию генератор с <code>i</code>, равным <code>10</code>. Мы вызываем функцию генератор, используя метод <code>next ()</code>. Когда мы в первый раз вызываем функцию генератора, <code>i</code> равно <code>10</code>. Он встречает первое ключевое слово <code>yield</code>, получая значение <code>i</code>. Генератор теперь "приостановлен", и <code>10</code> выводится в консоль.

Затем мы снова вызываем функцию с помощью метода <code>next ()</code>. Она запускается с того места, где остановилась ранее, все еще с <code>i</code>, равным <code>10</code>. Теперь он встречает следующее ключевое слово <code>yield</code> и возвращает <code>i * 2</code>. <code>i</code> равно <code>10</code>, поэтому он возвращает <code>10 * 2</code>, то есть <code>20</code>. Это приводит к 10, 20.
`;