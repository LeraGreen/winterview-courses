module.exports = () => `Функция <code>getList</code> получает массив в качестве аргумента. Между скобками функции <code>getList</code> мы сразу же деструктурируем этот массив. Вы можете увидеть это как:

 <code>[x, ...y] = [1, 2, 3, 4]</code>

С помощью оставшихся параметров <code>... y</code> мы помещаем все "оставшиеся" аргументы в массив. Остальные аргументы - это <code>2</code>, <code>3</code> и <code>4</code> в этом случае. Значение <code>y</code> является массивом, содержащим все остальные параметры. В этом случае значение <code>x</code> равно <code>1</code>, поэтому, мы видим в логе <code>[x, y]</code>, <code>[1, [2, 3, 4]]</code>.

Функция <code>getUser</code> получает объект. В случае функций со стрелками мы не можем писать фигурные скобки, если мы просто возвращаем одно значение. Однако, если вы хотите вернуть <i>объект</i> из стрелочной функции, вы должны написать его в скобках, в противном случае никакое значение не возвращается! Следующая функция вернула бы объект:

<code>const getUser = user => ({ name: user.name, age: user.age })</code>

Поскольку в этом случае значение не возвращается, функция возвращает значение <code>undefined</code>.
`;